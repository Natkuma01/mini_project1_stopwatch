{"ast":null,"code":"var _jsxFileName = \"/Users/nataliechan/projects/mini_project/stop_watch/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [running, setRunning] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (running) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!running) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [running]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"0\" + Math.floor(time / 60000 % 60), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\" + Math.floor(time / 1000 % 60)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\" + time / 10 % 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setRunning(true);\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setRunning(false);\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {},\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IfGJxOGKgLeAwp7t6UKjY06PfN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","time","setTime","running","setRunning","interval","setInterval","prevTime","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","onClick","_c","$RefreshReg$"],"sources":["/Users/nataliechan/projects/mini_project/stop_watch/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [time, setTime] = useState(0)  \n  const [running, setRunning] = useState(false)\n\n  useEffect(()=> {\n    let interval;\n    if (running) {\n      interval = setInterval(()=> {\n        setTime((prevTime)=> prevTime+10)\n      }, 10)\n    } else if (!running) {\n      clearInterval(interval)\n    }\n    return ()=> clearInterval(interval)\n  }, [running])\n\n  return (\n    <>\n    <h1>Stopwatch</h1>\n    <div>\n    <span>{(\"0\" + Math.floor((time/60000)%60))}:</span>\n    <span>{(\"0\" + Math.floor((time/1000)%60))}</span>\n    <span>{(\"0\"+ ((time/10)%100))}</span>\n    </div>\n    <div>\n      <button onClick={()=> { setRunning(true) }}>Start</button>\n      <button onClick={()=> { setRunning(false) }}>Stop</button>\n      <button onClick={()=> { }}>Restart</button>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAK;IACb,IAAIW,QAAQ;IACZ,IAAIF,OAAO,EAAE;MACXE,QAAQ,GAAGC,WAAW,CAAC,MAAK;QAC1BJ,OAAO,CAAEK,QAAQ,IAAIA,QAAQ,GAAC,EAAE,CAAC;MACnC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM,IAAI,CAACJ,OAAO,EAAE;MACnBK,aAAa,CAACH,QAAQ,CAAC;IACzB;IACA,OAAO,MAAKG,aAAa,CAACH,QAAQ,CAAC;EACrC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACEP,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,gBACAb,OAAA;QAAAa,QAAA,GAAQ,GAAG,GAAGK,IAAI,CAACC,KAAK,CAAEd,IAAI,GAAC,KAAK,GAAE,EAAE,CAAC,EAAE,GAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDjB,OAAA;QAAAa,QAAA,EAAQ,GAAG,GAAGK,IAAI,CAACC,KAAK,CAAEd,IAAI,GAAC,IAAI,GAAE,EAAE;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDjB,OAAA;QAAAa,QAAA,EAAQ,GAAG,GAAIR,IAAI,GAAC,EAAE,GAAE;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAK;UAAEZ,UAAU,CAAC,IAAI,CAAC;QAAC,CAAE;QAAAK,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DjB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAK;UAAEZ,UAAU,CAAC,KAAK,CAAC;QAAC,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DjB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAK,CAAE,CAAE;QAAAP,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA,eACJ,CAAC;AAEP;AAACb,EAAA,CAhCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}